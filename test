name: PayMyBuddy CI/CD

on:
  push:
    branches: [ dev, main ]
  pull_request:
    branches: [ main ]

jobs:
  build-and-test:
    runs-on: ubuntu-latest

    services:
      mysql:
        image: mysql:8.0
        env:
          MYSQL_ROOT_PASSWORD: root
          MYSQL_DATABASE: paymybuddy_test
        ports:
          - 3306:3306
        options: --health-cmd="mysqladmin ping" --health-interval=10s --health-timeout=5s --health-retries=3

    steps:
      - uses: actions/checkout@v4

      - name: Set up JDK 21
        uses: actions/setup-java@v4
        with:
          java-version: '21'
          distribution: 'temurin'
          cache: maven

      - name: Build with Maven
        run: mvn -B package --file pom.xml

      - name: Run Unit Tests
        run: mvn test

      - name: Run Integration Tests
        run: mvn failsafe:integration-test

      - name: Generate JaCoCo Coverage Report
        run: mvn jacoco:report

      - name: Generate JavaDocs
        run: mvn javadoc:javadoc

      - name: Upload JaCoCo Coverage Report
        uses: actions/upload-artifact@v4
        with:
          name: jacoco-report
          path: target/site/jacoco/

      - name: Upload JavaDocs
        uses: actions/upload-artifact@v4
        with:
          name: javadocs
          path: target/reports/apidocs/

      - name: Move JavaDocs to target/site
        run: mv target/reports/apidocs target/site/apidocs

      - name: Deploying reports to GitHub Pages
        uses: peaceiris/actions-gh-pages@v4
        with:
          github_token: ${{ secrets.GITHUB_TOKEN }}
          publish_dir: target/site


fichier yaml initial fonctionn√© parfaitement


```
FROM eclipse-temurin:21-jdk AS build

WORKDIR /app

COPY pom.xml .
COPY src ./src

RUN ./mvnw package -DskipTests

FROM eclipse-temurin:21-jre

WORKDIR /app

COPY --from=build /app/target/*.jar app.jar

EXPOSE 8080

ENTRYPOINT ["java", "-jar", "app.jar"]
```


ce docker fonctionne parfaitement en local egalement

